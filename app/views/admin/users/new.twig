{% extends 'template.twig' %}
{% block title %}New User // Admin{% endblock %}
{% block page %}admin users new{% endblock %}
{% block section %}admin{% endblock %}
{% block content %}
    <h1>Create New User</h1>
    <form method="post" autocomplete="off">
        <p>This will create a new user and send them a welcome email. (In general, users should be created by a
           third-party service using the API rather than directly.)</p>

        <h2>Basic Details</h2>
        <section>
            <input type="text" name="first_name" id="first_name" placeholder="First Name" required value="" autocomplete="off" />
            <input type="text" name="last_name" id="last_name" placeholder="Last Name" required value="" autocomplete="off" />
            <input type="email" name="email" id="email" placeholder="Email" required value="" autocomplete="off" />
        </section>

        <h2>Login Details</h2>
        <section>
            <input type="text" name="username" id="username" placeholder="Username" required value="" autocomplete="off" />
            <select name="password_type" id="password_type">
                <option value="generate">Generate a password</option>
                <option value="set">Set a password</option>
            </select>
            <input type="password" style="display:none" name="password" id="password" placeholder="Password (leave blank to generate)" value="" autocomplete="off" />
            <input type="submit" value="Create" />
        </section>
    </form>
{% endblock %}
{% block scripts %}
    <script type="text/javascript">
        (function(){
            var user_create_form = {
                field_name_first: document.getElementById('first_name'),
                field_name_last: document.getElementById('last_name'),
                field_username: document.getElementById('username'),
                field_password: document.getElementById('password'),
                field_password_type: document.getElementById('password_type'),

                username_has_been_updated: false,

                suggestUsername: function()
                {
                    if (!this.username_has_been_updated) {
                        this.field_username.value =   this.field_name_first.value.toLowerCase()
                                                    + this.field_name_last.value.toLowerCase();

                        this.checkUsername();
                    }
                },

                checkUsername: function()
                {
                    this.field_username.classList.remove('taken');
                    this.field_username.classList.remove('available');

                    if (this.field_username.value !== '') {
                        window['_util'].ajax('POST',
                                            '/api/user/exists',
                                            {username: this.field_username.value},
                                            function(data) {

                                                if (data.exists) {
                                                    user_create_form.field_username.classList.add('taken')
                                                } else {
                                                    user_create_form.field_username.classList.add('available');
                                                }
                                            }
                        );
                    }
                },

                showHidePassword: function()
                {
                    if (this.field_password_type.value == 'set') {
                        this.field_password.style.display = 'block';
                        this.field_password.value = '';
                        this.field_password.required = true;
                    } else {
                        this.field_password.style.display = 'none';
                        this.field_password.value = '';
                        this.field_password.required = false;
                    }
                },

                usernameOnChange: function()
                {
                    if (   this.field_username.value == ''
                        || this.field_username.value == (  this.field_name_first.value.toLowerCase()
                                                         + this.field_name_last.value.toLowerCase())) {
                        this.username_has_been_updated = false;
                        this.suggestUsername();
                    } else {
                        this.username_has_been_updated = true;
                    }

                    this.checkUsername();
                },

                setup: function()
                {
                    this.field_name_first.addEventListener('input', function(){user_create_form.suggestUsername()});
                    this.field_name_last.addEventListener('input', function(){user_create_form.suggestUsername()});
                    this.field_username.addEventListener('change', function(){user_create_form.usernameOnChange()});
                    this.field_password_type.addEventListener('change', function(){user_create_form.showHidePassword()});

                    setTimeout(function(){
                        user_create_form.field_username.value = '';
                        user_create_form.field_password.value = '';
                        user_create_form.username_has_been_updated = false;
                    }, 750);
                }
            };
            user_create_form.setup();
        })();
    </script>
{% endblock %}